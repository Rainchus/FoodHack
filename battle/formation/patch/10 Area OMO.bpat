@ $Formation_01 {
    $ShyGuy_RED 00000001 0000000A 00000000 00000000 00000000 00000000
}

@ $Formation_02 {
    $ShyGuy_GRN 00000001 0000000A 00000000 00000000 00000000 00000000
}

@ $Formation_03
{
	$ShyGuy_GRN 00000001 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_GRN 00000002 00000009 00000000 00000000 00000000 00000000
}

@ $Formation_04 {
    $ShyGuy_GRN 00000001 0000000A 00000000 00000000 00000000 00000000
}

@ $FormationTable {
    $SJIS_8023107C 00000002 $Formation_00 $Stage_8022DE0C 00000000
    $SJIS_80231074 00000001 $Formation_01 $Stage_8022DE0C 00000000
    $SJIS_80231068 00000001 $Formation_02 $Stage_GreenGuys 00000000
    $SJIS_8023105C 00000002 $Formation_03 $Stage_GreenGuys 00000000
    $SJIS_80231054 00000001 $Formation_04 $Stage_TransitionMap 00000000
    $SJIS_80231048 00000002 $Formation_05 $Stage_8022DE0C 00000000
    $SJIS_80231034 00000003 $Formation_06 $Stage_8022DE0C 00000000
    $SJIS_80231018 00000003 $Formation_07 $Stage_8022DE0C 00000000
    $SJIS_80230FFC 00000003 $Formation_08 $Stage_8022DE0C 00000000
    $SJIS_80230FE4 00000004 $Formation_09 $Stage_8022DE0C 00000000
    $SJIS_80230FCC 00000003 $Formation_0A $Stage_8022DE0C 00000000
    $SJIS_80230FB0 00000004 $Formation_0B $Stage_8022DE0C 00000000
    $SJIS_80230F94 00000003 $Formation_0C $Stage_8022DE0C 00000000
    $SJIS_80230F88 00000002 $Formation_0D $Stage_8022DE0C 00000000
    $SJIS_80230F78 00000002 $Formation_0E $Stage_8022DE0C 00000000
    $SJIS_80230F64 00000003 $Formation_0F $Stage_8022DE0C 00000000
    $SJIS_80230F50 00000002 $Formation_10 $Stage_8022DE0C 00000000
    $SJIS_80230F38 00000003 $Formation_11 $Stage_8022DE0C 00000000
    $SJIS_80230F1C 00000003 $Formation_12 $Stage_8022DE0C 00000000
    $SJIS_80230F00 00000004 $Formation_13 $Stage_8022DE0C 00000000
    $SJIS_80230EE0 00000003 $Formation_14 $Stage_8022DE0C 00000000
    $SJIS_80230ED4 00000002 $Formation_15 $Stage_8022DE0C 00000000
    $SJIS_80230EC0 00000002 $Formation_16 $Stage_8022DE0C 00000000
    $SJIS_80230EAC 00000002 $Formation_17 $Stage_8022DE0C 00000000
    $SJIS_80230E94 00000003 $Formation_18 $Stage_8022DE0C 00000000
    $SJIS_80230E7C 00000004 $Formation_19 $Stage_8022DE0C 00000000
    $SJIS_80230E70 00000004 $Formation_1A $Stage_8022DE0C 00000000
    $SJIS_80230E48 00000004 $Formation_1B $Stage_8022DE0C 00000000
    $SJIS_80230E3C 00000002 $Formation_1C $Stage_8022DE0C 00000000
    $SJIS_80230E30 00000003 $Formation_1D $Stage_8022DE0C 00000000
    $SJIS_80230E1C 00000002 $Formation_1E $Stage_8022DE0C 00000000
    $SJIS_80230E04 00000003 $Formation_1F $Stage_8022DE0C 00000000
    $SJIS_80230DEC 00000004 $Formation_20 $Stage_8022DE0C 00000000
    $SJIS_80230DCC 00000003 $Formation_21 $Stage_8022DE0C 00000000
    $SJIS_80230DAC 00000003 $Formation_22 $Stage_8022DE0C 00000000
    $SJIS_80230D8C 00000004 $Formation_23 $Stage_8022DE0C 00000000
    $SJIS_80230D78 00000003 $Formation_24 $Stage_8022DE0C 00000000
    $SJIS_80230D68 00000002 $Formation_25 $Stage_8022DE0C 00000000
    $SJIS_80230D58 00000003 $Formation_26 $Stage_8022DE0C 00000000
    $SJIS_80230D40 00000003 $Formation_27 $Stage_8022DE0C 00000000
    $SJIS_80230D28 00000003 $Formation_28 $Stage_8022DE0C 00000000
    $SJIS_80230D0C 00000004 $Formation_29 $Stage_8022DE0C 00000000
    $SJIS_80230CF0 00000003 $Formation_2A $Stage_8022DE0C 00000000
    $SJIS_80230CD4 00000003 $Formation_2B $Stage_8022DE0C 00000000
    $SJIS_80230CC8 00000001 $Formation_2C $Stage_AntiGuy 00000000
    00000000 00000000 00000000 00000000 00000000
}

@ $ShyGuy_RED {
    % stats
    [Index]        1Fb
    [Level]        9`b
    [MaxHP]         4`b
    [Coins]         10`b
    [Flags]       00000000
    [StatusTable] $StatusTable_80219224
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802192D0
    [Script]      $Script_Init_80219368
    % move effectiveness
    [Escape]       60`b
    [Item]         80`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

@ $Stage_8022DE0C {
    "jam_tex"  % omo_tex
    "jam_bt1_shape"  % omo_bt04_shape
    "jam_bt1_hit"  % omo_bt04_hit
    $Script_BeforeBattle_8022DD30
    $Script_AfterBattle_8022DDEC
    "sra_bg"  % omo_bg
    $ForegroundModelList_8022DDFC
    00000004
    $SpecialFormation_8022DE64
    00000000
}

#new:Stage $Stage_GreenGuys
{
    "jam_tex"  % omo_tex
    "jam_bt5_shape"  % omo_bt04_shape
    "jam_bt5_hit"  % omo_bt04_hit
    $Script_BeforeBattle_8022DD30
    $Script_AfterBattle_8022DDEC
    "kmr_bg"  % omo_bg
    $ForegroundModelList_8022DDFC
    00000004
    $SpecialFormation_8022DE64
    00000000  
}

#new:Stage $Stage_TransitionMap
{
    "jam_tex"  % omo_tex
    "jam_bt6_shape"  % omo_bt04_shape
    "jam_bt6_hit"  % omo_bt04_hit
    $Script_BeforeBattle_8022DD30
    $Script_AfterBattle_8022DDEC
    "kmr_bg"  % omo_bg
    $ForegroundModelList_8022DDFC
    00000004
    $SpecialFormation_8022DE64
    00000000  
}

#new:Stage $Stage_AntiGuy {
    "jam_tex"  % omo_tex
    "jam_bt3_shape"  % omo_bt04_shape
    "jam_bt3_hit"  % omo_bt04_hit
    $Script_BeforeBattle_8022DD30
    $Script_AfterBattle_8022DDEC
    "sra_bg"  % omo_bg
    $ForegroundModelList_8022DDFC
    00000004
    $SpecialFormation_8022DE64
    00000000
}

@ $Script_80219A04 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseBattleCamPreset    ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver (  20` )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  00000032
    Set   *Var1  00000000
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *VarA  *Var0
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self  0` .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
            Sub   *Var0  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
            If  *VarA  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var0  00000014
            Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
            Wait  15`
            Call  UseBattleCamPreset    ( 00000002 )
            Call  SetActorYaw       ( .Actor:Self  180` )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var0  00000001
            SetConst  *Var1  003B0004
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self  0` )
            Call  SetAnimation      ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0004 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  0000000A
    Set   *Var1  00000000
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0005 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseBattleCamPreset    ( 00000002 )
    Call  MoveBattleCamOver (  15` )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  0000001E
    Set   *Var1  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0001 )
    Wait  8`
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_802194C4
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

@ $Script_8021A12C {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseBattleCamPreset    ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver (  20` )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0009 )
    Wait  20`
    Call  SetAnimation      ( .Actor:Self 00000001 003B0003 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  00000050
    Set   *Var1  00000000
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0004 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
    Sub   *Var0  00000028
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *VarA  *Var0
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Sub   *Var0  0000000A
            Set   *Var1  00000000
            Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
            If  *VarA  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0005 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
            Sub   *Var0  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
            Sub   *Var0  00000014
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
            Wait  15`
            Call  UseBattleCamPreset    ( 00000002 )
            Call  MoveBattleCamOver     (  15` )
            Call  SetActorYaw   ( .Actor:Self  180` )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var0  00000001
            SetConst  *Var1  003B0004
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self  0` )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B000A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  .HitResult:QuakeImmune % 2
            Call  UseBattleCamPreset    ( 00000002 )
            Call  MoveBattleCamOver     (  15` )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var3  00000000
                Loop  00000014
                    Sub   *Var3  0000001E
                    If  *Var3  <  00000000
                        Add   *Var3  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var0 )
            If  *Var0  &  80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var0 )
            If  *Var0  ==  00000000
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Add   *Var0  00000028
            Set   *Var1  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0009 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0007 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Add   *Var0  00000028
            Set   *Var1  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0010 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var0 )
            If  *Var0  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 003B0011 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0013 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self  180` )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var0  00000001
            SetConst  *Var1  003B0004
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self  0` )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0001 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

@ $ShyGuy_GRN {
    % stats
    [Index]        1Fb
    [Level]        14`b
    [MaxHP]         4`b
    [Coins]         10`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8021FE24
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_8021FED0
    [Script]      $Script_Init_8021FF68
    % move effectiveness
    [Escape]       60`b
    [Item]         80`b
    [AirLift]      85`b
    [Hurricane]    80`b % Bow's "Spook" as well
    [UpAndAway]    95`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

@ $Script_80220604 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseBattleCamPreset    ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver (  20` )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0203 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  00000032
    Set   *Var1  00000000
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *VarA  *Var0
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0204 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self  0` .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0205 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
            Sub   *Var0  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
            If  *VarA  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var0  00000014
            Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
            Wait  15`
            Call  UseBattleCamPreset    ( 00000002 )
            Call  SetActorYaw       ( .Actor:Self  180` )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var0  00000001
            SetConst  *Var1  003B0204
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self  0` )
            Call  SetAnimation      ( .Actor:Self 00000001 003B0201 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0204 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  0000000A
    Set   *Var1  00000000
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0205 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseBattleCamPreset    ( 00000002 )
    Call  MoveBattleCamOver (  15` )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  0000001E
    Set   *Var1  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0201 )
    Wait  8`
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_802200C4
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

@ $Script_80220D2C {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseBattleCamPreset    ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver (  20` )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0209 )
    Wait  20`
    Call  SetAnimation      ( .Actor:Self 00000001 003B0203 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  00000050
    Set   *Var1  00000000
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0204 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
    Sub   *Var0  00000028
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *VarA  *Var0
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B020A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Sub   *Var0  0000000A
            Set   *Var1  00000000
            Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
            If  *VarA  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0205 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
            Sub   *Var0  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
            Sub   *Var0  00000014
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
            Wait  15`
            Call  UseBattleCamPreset    ( 00000002 )
            Call  MoveBattleCamOver     (  15` )
            Call  SetActorYaw   ( .Actor:Self  180` )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var0  00000001
            SetConst  *Var1  003B0204
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self  0` )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0201 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B020A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  .HitResult:QuakeImmune % 2
            Call  UseBattleCamPreset    ( 00000002 )
            Call  MoveBattleCamOver     (  15` )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var3  00000000
                Loop  00000014
                    Sub   *Var3  0000001E
                    If  *Var3  <  00000000
                        Add   *Var3  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var0 )
            If  *Var0  &  80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var0 )
            If  *Var0  ==  00000000
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Add   *Var0  00000028
            Set   *Var1  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0207 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Add   *Var0  00000028
            Set   *Var1  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0210 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var0 )
            If  *Var0  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 003B0211 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0213 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self  180` )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var0  00000001
            SetConst  *Var1  003B0204
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self  0` )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0201 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

@ $ForegroundModelList_8022DDFC {
    00000000
}

@ $Script_802220FC {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseBattleCamPreset    ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver (  20` )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0503 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  00000032
    Set   *Var1  00000000
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *VarA  *Var0
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0504 )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self  0` .False )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0505 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
            Sub   *Var0  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
            If  *VarA  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var0  00000014
            Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
            Wait  15`
            Call  UseBattleCamPreset    ( 00000002 )
            Call  SetActorYaw       ( .Actor:Self  180` )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
            SetConst  *Var0  00000001
            SetConst  *Var1  003B0504
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw       ( .Actor:Self  0` )
            Call  SetAnimation      ( .Actor:Self 00000001 003B0501 )
            Call  EnableIdleScript  ( .Actor:Self 00000001 )
            Call  UseIdleAnimation  ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0504 )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  0000000A
    Set   *Var1  00000000
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0505 )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseBattleCamPreset    ( 00000002 )
    Call  MoveBattleCamOver (  15` )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  0000001E
    Set   *Var1  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0501 )
    Wait  8`
    Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
    ExecWait  $Script_80221BBC
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}
@ $Script_80222824 {
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseBattleCamPreset    ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver (  20` )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0509 )
    Wait  20`
    Call  SetAnimation      ( .Actor:Self 00000001 003B0503 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[3.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  00000050
    Set   *Var1  00000000
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation      ( .Actor:Self 00000001 003B0504 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
    Sub   *Var0  00000028
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *VarA  *Var0
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0509 )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self 00000001 003B050A )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Sub   *Var0  0000000A
            Set   *Var1  00000000
            Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
            If  *VarA  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self 00000001 003B0505 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
            Sub   *Var0  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
            Sub   *Var0  00000014
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
            Wait  15`
            Call  UseBattleCamPreset    ( 00000002 )
            Call  MoveBattleCamOver     (  15` )
            Call  SetActorYaw   ( .Actor:Self  180` )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var0  00000001
            SetConst  *Var1  003B0504
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self  0` )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0501 )
            Call  EnableIdleScript      ( .Actor:Self 00000001 )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
    Call  SetAnimation  ( .Actor:Self 00000001 003B0509 )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self 00000001 003B050A )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000006 00000020 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  .HitResult:QuakeImmune % 2
            Call  UseBattleCamPreset    ( 00000002 )
            Call  MoveBattleCamOver     (  15` )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var3  00000000
                Loop  00000014
                    Sub   *Var3  0000001E
                    If  *Var3  <  00000000
                        Add   *Var3  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var0 )
            If  *Var0  &  80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var0 )
            If  *Var0  ==  00000000
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Add   *Var0  00000028
            Set   *Var1  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0509 )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self 00000001 003B0507 )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Add   *Var0  00000028
            Set   *Var1  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0510 )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var0 )
            If  *Var0  <  00000032
                Call  SetAnimation  ( .Actor:Self 00000001 003B0511 )
            Else
                Call  SetAnimation  ( .Actor:Self 00000001 003B0513 )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
            Call  SetActorYaw   ( .Actor:Self  180` )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
            SetConst  *Var0  00000001
            SetConst  *Var1  003B0504
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self  0` )
            Call  SetAnimation  ( .Actor:Self 00000001 003B0501 )
        EndCaseGroup
    EndSwitch
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
    Return
    End
}

@ $AntiGuy {
    % stats
    [Index]        AFb
    [Level]        42`b
    [MaxHP]        30`b
    [Coins]         0`b
    [Flags]       00000000
    [StatusTable] $StatusTable_8022191C
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_802219C8
    [Script]      $Script_Init_80221A60
    % move effectiveness
    [Escape]       50`b
    [Item]          0`b
    [AirLift]       0`b
    [Hurricane]     0`b % Bow's "Spook" as well
    [UpAndAway]     0`b
    [PowerBounce]  75`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         30`b  30`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}