#export .megaRushCopyID 10

%for key items: ExecWait $BindScriptMenuForKeyItemsMenu
%for consumables: ExecWait $BindingScriptForConsumablesMenu

#export:Data $bufferForMenu {
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
}

#export:Function $Function_BeforeBindLock {
    ADDIU     SP, SP, FFE8
    SW        RA, 10 (SP)
    LW        V0, C (A0)
    JAL       ~Func:get_variable
    LW        A1, 0 (V0)
    COPY      V1, V0
    BEQ       V1, R0, .o64
    CLEAR     A0
    LW        V0, 0 (V1)
    BEQL      V0, R0, .o50
    SLL       V0, A0, 2
    LA        A1, $bufferForMenu
.o34
    ADDIU     V1, V1, 4
    ADDIU     A0, A0, 1
    SW        V0, 0 (A1)
    LW        V0, 0 (V1)
    BNE       V0, R0, .o34
    ADDIU     A1, A1, 4
    SLL       V0, A0, 2
.o50
    STW       R0, V0 ($bufferForMenu)
    BEQ       R0, R0, .o8C
    NOP
.o64
    LA        V1, $bufferForMenu
    COPY      A1, V1
.o70
    ADDIU     V0, A0, 10
    SW        V0, 0 (V1)
    ADDIU     V1, V1, 4
    ADDIU     A0, A0, 1
    SLTI      V0, A0, 70
    BNE       V0, R0, .o70
    SW        R0, 1C0 (A1)
.o8C
    LW        RA, 10 (SP)
    LI        V0, 2
    JR        RA
    ADDIU     SP, SP, 18
}

#export:Script:Map $KeyItemsBindLockMainScript
{
    0:  Set   *Var9  *Var1
   10:  Call  ShowKeyChoicePopup ( )
   1C:  Set   *VarA  *Var0
   2C:  Switch  *Var0
   38:  	Case  ==  00000000
   44:  	Case  ==  FFFFFFFF
   50:  	Default
   58:  		Call  RemoveKeyItemAt       ( *Var1 )
   68:  		Call  GetPlayerPos  ( *Var3 *Var4 *Var5 )
   80:  		Call  $ControlMenuMaybe ( *Var3 *Var4 *Var5 )
   98:  		ConstOR  *Var0 00050000
   A8:  		Call  MakeItemEntity        ( *Var0 *Var3 *Var4 *Var5 .ItemSpawnMode:Decoration 00000000 )
   CC:  		Call  SetPlayerAnimation    ( 00060005 )
   DC:  		Wait  30`
   E8:  		Call  SetPlayerAnimation    ( 00010002 )
   F8:  		Call  RemoveItemEntity      ( *Var0 )
  108:  EndSwitch
  110:  Call  $EndMenuInteraction    ( *VarA )
  120:  Call  CloseChoicePopup ( )
  12C:  Unbind
  134:  Return
  13C:  End
}

#new:Script $ConsumableBindLockMainScript
{
    0:  Set   *Var9  *Var1
   10:  Call  ShowConsumableChoicePopup ( )
   1C:  Set   *VarA  *Var0
   2C:  Switch  *Var0
   38:  	Case  ==  00000000
   44:  	Case  ==  FFFFFFFF
   50:  	Default
   58:  		Call  RemoveItemAt  ( *Var1 )
   68:  		Call  GetPlayerPos  ( *Var3 *Var4 *Var5 )
   80:  		Call  $ControlMenuMaybe    ( *Var3 *Var4 *Var5 )
   98:  		Call  MakeItemEntity        ( *Var0 *Var3 *Var4 *Var5 .ItemSpawnMode:Decoration 00000000 )
   BC:  		Call  SetPlayerAnimation    ( 00060005 )
   CC:  		Wait  30`
   D8:  		Call  SetPlayerAnimation    ( 00010002 )
   E8:  		Call  RemoveItemEntity      ( *Var0 )
   F8:  EndSwitch
  100:  Call  $EndMenuInteraction    ( *VarA )
  110:  Call  CloseChoicePopup ( )
  11C:  Unbind
  124:  Return
  12C:  End
}

#export:Function $EndMenuInteraction
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  SAW       V0, $unk_8024D948
   1C:  LI        V0, 2
   20:  LW        RA, 10 (SP)
   24:  LI        V1, 1
   28:  SAW       V1, $unk_8024D944
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

#export:Function $Function_AfterBindLock
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  BEQ       A1, R0, .o18
    C:  LW        A2, C (A0)
   10:  SAW       R0, $unk_8024D944
        .o18
   18:  LA        V1, $unk_8024D944
   20:  LW        V0, 0 (V1)
   24:  BNEL      V0, R0, .o34
   28:  SW        R0, 0 (V1)
   2C:  BEQ       R0, R0, .o48
   30:  CLEAR     V0
        .o34
   34:  LW        A1, 0 (A2)
   38:  LAW       A2, $unk_8024D948
   3C:  JAL       ~Func:set_variable
   40:  RESERVED
   44:  LI        V0, 2
        .o48
   48:  LW        RA, 10 (SP)
   4C:  JR        RA
   50:  ADDIU     SP, SP, 18
}

#export:Unknown $unk_8024D944
{
	00000000
}

#export:Unknown $unk_8024D948
{
	00000000
}

#export:Script:Map $BindScriptMenuForKeyItemsMenu { %takes Var0, pointer to valid items, Var1 item to find
    0:   Call  $Function_BeforeBindLock    ( *Var0 )
    10:  BindLock  $KeyItemsBindLockMainScript 00000010 00000000 $bufferForMenu 00000000 00000001
    30:  Call  $Function_AfterBindLock    ( *Var0 )
    40:  Return
    48:  End
}

#export:Script:Map $BindingScriptForConsumablesMenu
{
    0:  Call  $Function_BeforeBindLock    ( *Var0 )
   10:  BindLock  $ConsumableBindLockMainScript 00000010 00000000 $bufferForMenu 00000000 00000001
   30:  Call  $Function_AfterBindLock    ( *Var0 )
   40:  Return
   48:  End
}

#export:Function $ControlMenuMaybe
{
    0:  ADDIU     SP, SP, FFB0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F28, 48 (SP)
   24:  SDC1      F26, 40 (SP)
   28:  SDC1      F24, 38 (SP)
   2C:  SDC1      F22, 30 (SP)
   30:  SDC1      F20, 28 (SP)
   34:  LW        S0, C (S1)
   38:  LW        S3, 0 (S0)
   3C:  ADDIU     S0, S0, 4
   40:  JAL       ~Func:get_variable
   44:  COPY      A1, S3
   48:  MTC1      V0, F28
   4C:  NOP
   50:  CVT.S.W   F28, F28
   54:  LW        S4, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  COPY      A0, S1
   60:  JAL       ~Func:get_variable
   64:  COPY      A1, S4
   68:  MTC1      V0, F26
   6C:  NOP
   70:  CVT.S.W   F26, F26
   74:  LW        S0, 0 (S0)
   78:  COPY      A0, S1
   7C:  JAL       ~Func:get_variable
   80:  COPY      A1, S0
   84:  MTC1      V0, F24
   88:  NOP
   8C:  CVT.S.W   F24, F24
   90:  LA        S2, 8010EFC8
   98:  LAW       V1, 80077410
   A0:  LWC1      F2, A8 (S2)
   A4:  MTC1      R0, F0
   A8:  SLL       V0, V1, 2
   AC:  ADDU      V0, V0, V1
   B0:  SLL       V0, V0, 2
   B4:  SUBU      V0, V0, V1
   B8:  SLL       V1, V0, 3
   BC:  ADDU      V0, V0, V1
   C0:  SLL       V0, V0, 3
   C4:  C.EQ.S    F2, F0
   C8:  LTF       F22, V0 (800B1DEC)
   D4:  BC1F      .oEC
   D8:  NOP
   DC:  LIF       F0, 100.0
   E4:  BEQ       R0, R0, .oFC
   E8:  SUB.S     F22, F22, F0
        .oEC
   EC:  LIF       F0, 100.0
   F4:  NOP
   F8:  ADD.S     F22, F22, F0
        .oFC
   FC:  JAL       ~Func:clamp_angle
  100:  MOV.S     F12, F22
  104:  MOV.S     F22, F0
  108:  LIF       F20, 15.0
  110:  JAL       ~Func:sin_deg
  114:  MOV.S     F12, F22
  118:  MUL.S     F0, F0, F20
  11C:  NOP
  120:  LH        V0, B0 (S2)
  124:  LIF       F4, 0.5
  12C:  MTC1      V0, F2
  130:  NOP
  134:  CVT.S.W   F2, F2
  138:  MUL.S     F2, F2, F4
  13C:  NOP
  140:  ADD.S     F28, F28, F0
  144:  ADD.S     F26, F26, F2
  148:  JAL       ~Func:cos_deg
  14C:  MOV.S     F12, F22
  150:  MUL.S     F0, F0, F20
  154:  NOP
  158:  COPY      A0, S1
  15C:  COPY      A1, S3
  160:  TRUNC.W.S F6, F28
  164:  MFC1      A2, F6
  168:  JAL       ~Func:set_variable
  16C:  SUB.S     F24, F24, F0
  170:  COPY      A0, S1
  174:  TRUNC.W.S F6, F26
  178:  MFC1      A2, F6
  17C:  JAL       ~Func:set_variable
  180:  COPY      A1, S4
  184:  COPY      A0, S1
  188:  TRUNC.W.S F6, F24
  18C:  MFC1      A2, F6
  190:  JAL       ~Func:set_variable
  194:  COPY      A1, S0
  198:  LW        RA, 24 (SP)
  19C:  LW        S4, 20 (SP)
  1A0:  LW        S3, 1C (SP)
  1A4:  LW        S2, 18 (SP)
  1A8:  LW        S1, 14 (SP)
  1AC:  LW        S0, 10 (SP)
  1B0:  LDC1      F28, 48 (SP)
  1B4:  LDC1      F26, 40 (SP)
  1B8:  LDC1      F24, 38 (SP)
  1BC:  LDC1      F22, 30 (SP)
  1C0:  LDC1      F20, 28 (SP)
  1C4:  LI        V0, 2
  1C8:  JR        RA
  1CC:  ADDIU     SP, SP, 50
}

#export:Function $InitConsumablesList {
    LI a0, 5A %number of times to loop
    LI v0, 80 %lowest valid item id
    LI v1, $bufferForMenu
    .loop
    SW v0, 0 (v1)
    ADDIU v1, v1, 4
    ADDIU a0, a0, FFFF
    BGEZ a0, .loop
    ADDIU v0, v0, 1
    SW r0, 4 (v1)
    JR RA
    ORI v0, r0, 2
}

#export:String $NoItem {
[Style Right] No item.[Wait][End]
}

#export:Function $Function_ItemTableItemPtr
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V0, C (S0)
   14:  JAL       ~Func:get_variable
   18:  LW        A1, 0 (V0)
   1C:  LA        A0, 800878E0
   24:  SLL       V1, V0, 5
   28:  ADDU      A0, V1, A0
   2C:  LI        V1, BB
   30:  BNE       V0, V1, .o40
   34:  LI        V0, 2
   38:  BEQ       R0, R0, .o5C
   3C:  SW        V0, A8 (S0)
        .o40
   40:  LHU       V0, 18 (A0)
   44:  ANDI      V0, V0, 80
   48:  BEQ       V0, R0, .o58
   4C:  LI        V0, 1
   50:  BEQ       R0, R0, .o5C
   54:  SW        V0, A8 (S0)
        .o58
   58:  SW        R0, A8 (S0)
        .o5C
   5C:  LW        RA, 14 (SP)
   60:  LW        S0, 10 (SP)
   64:  LI        V0, 2
   68:  JR        RA
   6C:  ADDIU     SP, SP, 18
}

#new:String $plsWorkString {
[Style Right]
Wow! A present for me?[Wait][End]
}

/%
%interact script example for consumables
#export:Script:Map $InteractScript {
    Call  DisablePlayerInput ( .True )
    Call  SpeakToPlayer ( .Npc:Self 00A70004 00A70001 00000000 $plsWorkString ) % Wow! A present for me?
    Call  $InitConsumablesList ()
    Set   *Var0  $bufferForMenu
    Set   *Var1  00000000
    ExecWait $BindingScriptForConsumablesMenu
    Switch *Var0
        Case  <=  00000000
            %no item
        Default
            Set   *Var8  *Var0
            Call  $Function_ItemTableItemPtr    ( *Var0 )
            Call  GetNpcPos ( 2 *Var1 *Var2 *Var3 )
            Add *Var2 30` %just for testing
            Call  MakeItemEntity    ( *Var8 *Var1 *Var2 *Var3 .ItemSpawnMode:Decoration 00000000 )
            Set   *Var7  *Var0
            Wait  20`
            Call  RemoveItemEntity  ( *Var7 )
    EndSwitch
    Call DisablePlayerInput ( .False )
    Return
    End     
}
%/

%interact script example for key items
/%
#export:Script $InteractScriptRhuff {
    Call DisablePlayerInput (.True)
    If *RhuffDelieveredPresent == .False
      Call FindKeyItem ( .megaRushCopyID *Var0 )
      If *Var0 != FFFFFFFF
        Call  SpeakToPlayer ( .Npc:Self 00A70004 00A70001 00000000 $newRhuffString ) % Wow! A present for me?
        %present
        ExecWait $BindScriptMenuForKeyItemsMenu
        Switch *Var0
          Case == FFFFFFFF
            %B pressed
            Call  SpeakToPlayer ( .Npc:Self 00A70004 00A70001 00000000 $Sadge ) % Wow! A present for me?
          Default
            Call  SpeakToPlayer ( .Npc:Self 00A70004 00A70001 00000000 $happy ) % Wow! A present for me?
        EndSwitch
      Else
      Call  SpeakToPlayer ( .Npc:Self 00A70004 00A70001 00000000 00030014 ) % We have lots of rare Badges, so take a verrrry clo ...
      EndIf
    EndIf
    Call DisablePlayerInput (.False)
    Return
    End
}
%/

#export:String $newRhuffString {
[Style Right]
Wow! A present for me?[Wait][End]
}

#export:String $Sadge{
[Style Right]Awwww...[WAIT][END]
}
    
#export:String $happy {
[Style Right]Yay![WAIT][END]
}

